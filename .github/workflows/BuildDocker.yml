name: Build Docker Image for AtroPIM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: atro_user
          POSTGRES_PASSWORD: atro_password
          POSTGRES_DB: atro_db
        ports:
          - 5432:5432
        options: >
          --health-cmd "pg_isready -U atro_user" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5

    steps:
    - name: Create AtroPIM directory
      run: mkdir -p /var/www/atropim

    - name: Enter AtroPIM directory
      run: cd /var/www/atropim

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        path: /var/www/atropim

    - name: Clone Skeleton PIM (No Demo)
      run: |
        cd /var/www/atropim
        git clone https://gitlab.atrocore.com/atrocore/skeleton-pim-no-demo.git .
        php composer.phar self-update
        php composer.phar update

    - name: Set ownership for AtroPIM
      run: chown -R www-data:www-data /var/www/atropim

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, pdo_pgsql

    - name: Add AtroCore repository
      run: composer config repositories.atrocore vcs https://github.com/atrocore/atrocore

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Run AtroPIM installation
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: atro_db
        DB_USERNAME: atro_user
        DB_PASSWORD: atro_password
      run: |
        php artisan atrocore:install --no-demo-data

    - name: Create Dockerfile
      run: |
        echo "FROM php:8.0-apache" > Dockerfile
        echo "COPY . /var/www/html" >> Dockerfile
        echo "RUN docker-php-ext-install pdo_pgsql" >> Dockerfile

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t atropim:latest .

    - name: Tag Docker image
      run: |
        docker tag atropim:latest ${{ secrets.DOCKER_USERNAME }}/atropimmw:latest

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/atropimmw:latest
